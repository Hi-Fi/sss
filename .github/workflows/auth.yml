name: sss-auth

on:
  pull_request:
    paths:
      - "auth/**"
      - ".github/workflows/auth.yml"
  push:
    branches:
      - main

env:
  IMAGE_NAME: europe-north1-docker.pkg.dev/sitsitsit-dev/sss/auth
  IMAGE_TAG: ${{ github.event_name == 'push' && github.sha || format('pr-{0}', github.event.pull_request.number) }}

defaults:
  run:
    working-directory: ./auth

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3

      - name: Set up golang
        uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # tag=v3
        with:
          go-version: '1.19'

      - uses: actions/cache@4b0cf6cc4619e737324ddfcec08fff2413359514 # tag=v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        run: |
          make ensure
          make test

      - name: Build
        run: |
          make build-linux-amd64

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@8d125895b958610ec414ca4dae010257eaa814d3 # tag=v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Build and push image
        run: |
          gcloud auth configure-docker europe-north1-docker.pkg.dev
          docker image build -t ${IMAGE_NAME}:${IMAGE_TAG} --build-arg APPLICATION_BINARY_PATH=bin/linux/sss-auth -f ../docker/go_release.Dockerfile .
          docker image push ${IMAGE_NAME}:${IMAGE_TAG}

  deploy-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
    needs: test-build
    environment:
      name: PR-${{ github.event.pull_request.number }}-auth
      url: ${{ steps.deploy_review.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@8d125895b958610ec414ca4dae010257eaa814d3 # tag=v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy review
        id: deploy_review
        uses: google-github-actions/deploy-cloudrun@194392f9d796cd42b2617a231eec28e08f9e27e1 # tag=v1.0.0
        with:
          service: auth
          image: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          no_traffic: true
          region: europe-north1
          suffix: ${{env.IMAGE_TAG}}
          env_vars: |
            JWT_SECRET_KEY=testsecret

  deploy-prod:
    runs-on: ubuntu-latest
    needs: test-build
    if: github.event_name == 'push'
    environment:
      name: Production-auth
      url: ${{ steps.deploy_prod.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@8d125895b958610ec414ca4dae010257eaa814d3 # tag=v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy production
        id: deploy_prod
        uses: google-github-actions/deploy-cloudrun@194392f9d796cd42b2617a231eec28e08f9e27e1 # tag=v1.0.0
        with:
          service: auth
          image: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          region: europe-north1
          suffix: ${{env.IMAGE_TAG}}
          env_vars: |
            JWT_SECRET_KEY=${{ secrets.DEV_JWT_SECRET_KEY }}
