name: go_cloud_run

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string


env:
  IMAGE_NAME: europe-north1-docker.pkg.dev/sitsitsit-dev/sss/${{ inputs.application-name }}
  IMAGE_TAG: ${{ github.event_name == 'push' && github.sha || format('pr-{0}', github.event.pull_request.number) }}

jobs:
  test-build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    defaults:
      run:
        working-directory: ./${{ inputs.application-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up golang
        uses: actions/setup-go@be3c94b385c4f180051c996d336f57a34c397495 # v3
        with:
          go-version: '1.19'

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        run: |
          make ensure
          make test

      - name: Build
        run: |
          make build-linux-amd64

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # tag=v1.0.0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOY_SERVICE_ACCOUNT }}

      - name: Build and push image
        run: |
          gcloud auth configure-docker europe-north1-docker.pkg.dev
          docker image build -t ${IMAGE_NAME}:${IMAGE_TAG} --build-arg APPLICATION_FILE_PATH=bin/linux -f ../docker/go_release.Dockerfile .
          docker image push ${IMAGE_NAME}:${IMAGE_TAG}

  deploy-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor != 'renovate[bot]'
    permissions:
      contents: 'read'
      id-token: 'write'
    needs: test-build
    environment:
      name: PR-${{ github.event.pull_request.number }}-${{ inputs.application-name }}
      url: ${{ steps.deploy_review.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # tag=v1.0.0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOY_SERVICE_ACCOUNT }}

      - name: Deploy review
        id: deploy_review
        uses: google-github-actions/deploy-cloudrun@194392f9d796cd42b2617a231eec28e08f9e27e1 # tag=v1.0.0
        with:
          service: ${{ inputs.application-name }}
          image: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          tag: ${{env.IMAGE_TAG}}
          region: europe-north1
          no_traffic: true
          env_vars: |
            JWT_SECRET_KEY=testsecret

  deploy-prod:
    runs-on: ubuntu-latest
    needs: test-build
    if: github.event_name == 'push'
    permissions:
      contents: 'read'
      id-token: 'write'
    environment:
      name: Production-auth
      url: ${{ steps.deploy_prod.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # tag=v1.0.0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOY_SERVICE_ACCOUNT }}

      - name: Deploy production
        id: deploy_prod
        uses: google-github-actions/deploy-cloudrun@194392f9d796cd42b2617a231eec28e08f9e27e1 # tag=v1.0.0
        with:
          service: ${{ inputs.application-name }}
          image: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          region: europe-north1
          suffix: ${{env.IMAGE_TAG}}
          env_vars: |
            JWT_SECRET_KEY=${{ secrets.DEV_JWT_SECRET_KEY }}

      - name: Move traffic to new revision
        id: migrate_traffic_prod
        uses: google-github-actions/deploy-cloudrun@194392f9d796cd42b2617a231eec28e08f9e27e1 # tag=v1.0.0
        with:
          region: europe-north1
          service: ${{ inputs.application-name }}
          revision_traffic: ${{ inputs.application-name }}-${{env.IMAGE_TAG}}=100
